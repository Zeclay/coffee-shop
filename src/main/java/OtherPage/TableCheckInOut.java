/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OtherPage;

import com.mycompany.projectteaminthanin.DaoModel.DaoCheckInOut;
import com.mycompany.projectteaminthanin.MainMenuPanel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.AbstractTableModel;
import model.CheckInOut;
import model.Employee;

/**
 *
 * @author ROG
 */
public class TableCheckInOut extends javax.swing.JPanel {

    Timer timer;
    private ArrayList<CheckInOut> CheckList;
    private CheckInOutTablemodel model;
    MainMenuPanel mainMenu;

    /**
     * Creates new form TableCheckInOut
     */
    public TableCheckInOut(MainMenuPanel mainMenu) {
        this.mainMenu = mainMenu;
        initComponents();
        timerController();
        DaoCheckInOut dao = new DaoCheckInOut();
        loadTable(dao);

    }

    public void refreshTable() {
        DaoCheckInOut dcio = new DaoCheckInOut();
        ArrayList<CheckInOut> cio = dcio.getAll();
        CheckList.clear();
        CheckList.addAll(cio);
        tblCheck.validate();
        tblCheck.repaint();
        mainMenu.resetCheckInOut();
    }

    private void timerController() {
        ActionListener actionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date date = new Date();
                DateFormat timerFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                String time = timerFormat.format(date);
                lblTimerBox.setText(time);
            }

        };
        timer = new Timer(1000, actionListener);
        timer.setInitialDelay(0);
        timer.start();
    }

    public void loadTable(DaoCheckInOut dao) {
        CheckList = dao.getAll();
        model = new CheckInOutTablemodel(CheckList);
        tblCheck.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCheck = new javax.swing.JTable();
        btnCheckIn = new javax.swing.JButton();
        btnCheckOut = new javax.swing.JButton();
        lblTimerBox = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();

        tblCheck.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCheck);

        btnCheckIn.setText("CheckIn");
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        btnCheckOut.setText("CheckOut");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        lblTimerBox.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        lblTimerBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTimerBox.setText("TimerBox");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTimerBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTimerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheckIn)
                    .addComponent(btnCheckOut)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        DaoCheckInOut dcio = new DaoCheckInOut();
        dcio.add(new CheckInOut(-1, new Employee(mainMenu.getCurrentUser().getEmployeeId(), mainMenu.getCurrentUser().getName(), "", "", "", "", "", "", 0.0), "CheckIn", null));

        refreshTable();
    }//GEN-LAST:event_btnCheckInActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        DaoCheckInOut dcio = new DaoCheckInOut();
        dcio.add(new CheckInOut(-1, new Employee(mainMenu.getCurrentUser().getEmployeeId(), mainMenu.getCurrentUser().getName(), "", "", "", "", "", "", 0.0), "CheckOut", null));
        refreshTable();
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Do You Want To Clear All?", "WARNING",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            DaoCheckInOut dcio = new DaoCheckInOut();
            dcio.deleteAll();
            refreshTable();
        }

    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnClear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTimerBox;
    private javax.swing.JTable tblCheck;
    // End of variables declaration//GEN-END:variables
private class CheckInOutTablemodel extends AbstractTableModel {

        private final ArrayList<CheckInOut> data;
        String[] columnName = {"ID", "Emp_id", "Type", "DateTime"};

        private CheckInOutTablemodel(ArrayList<CheckInOut> data) {
            this.data = data;
        }

        @Override
        public int getRowCount() {
            return this.data.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            CheckInOut cio = this.data.get(rowIndex);
            if (columnIndex == 0) {
                return cio.getCheckID();
            }
            if (columnIndex == 1) {
                return cio.getEmployee().getEmployeeId();
            }
            if (columnIndex == 2) {
                return cio.getType();
            }
            if (columnIndex == 3) {
                return cio.getDate();
            }
            return "";
        }

        @Override
        public String getColumnName(int column) {
            return columnName[column];
        }

    }
}
